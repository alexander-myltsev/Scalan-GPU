digraph G {
"Sym(11)" [
label="Sym(11) \n Const(0.0)"
shape=box
]
"Sym(8)" [
label="Sym(8) \n Const(0)"
shape=box
]
"Sym(4)" [
label="Sym(4) \n NestedArrayValues(var_Sym(1): PArray[PArray[Tuple2[Int, Float]]])"
shape=box
color=blue
]
"var_Sym(1): PArray[PArray[Tuple2[Int, Float]]]" -> "Sym(4)"
"Sym(5)" [
label="Sym(5) \n FirstPA(Sym(4))"
shape=box
color=blue
]
"Sym(4)" -> "Sym(5)"
"Sym(6)" [
label="Sym(6) \n LengthPA(Sym(5))"
shape=box
]
"Sym(5)" -> "Sym(6)"
"Sym(7)" [
label="Sym(7) \n Const(1)"
shape=box
]
"Sym(9)" [
label="Sym(9) \n ReplicatePA(Sym(6),Sym(7))"
shape=box
color=blue
]
"Sym(6)" -> "Sym(9)"
"Sym(7)" -> "Sym(9)"
"Sym(10)" [
label="Sym(10) \n ExpBinopArray(NumericPlus(Sym(8), Sym(8)),Sym(9),Sym(5))"
shape=box
color=blue
]
"Sym(8)" -> "Sym(10)"
"Sym(8)" -> "Sym(10)"
"Sym(9)" -> "Sym(10)"
"Sym(5)" -> "Sym(10)"
"Sym(12)" [
label="Sym(12) \n BackPermute(var_Sym(3): PArray[Float],Sym(10))"
shape=box
color=blue
]
"var_Sym(3): PArray[Float]" -> "Sym(12)"
"Sym(10)" -> "Sym(12)"
"Sym(13)" [
label="Sym(13) \n SecondPA(Sym(4))"
shape=box
color=blue
]
"Sym(4)" -> "Sym(13)"
"Sym(14)" [
label="Sym(14) \n ExpBinopArray(NumericPlus(Sym(11), Sym(11)),Sym(12),Sym(13))"
shape=box
color=blue
]
"Sym(11)" -> "Sym(14)"
"Sym(11)" -> "Sym(14)"
"Sym(12)" -> "Sym(14)"
"Sym(13)" -> "Sym(14)"
"Sym(15)" [
label="Sym(15) \n NestedArraySegments(var_Sym(1): PArray[PArray[Tuple2[Int, Float]]])"
shape=box
color=blue
]
"var_Sym(1): PArray[PArray[Tuple2[Int, Float]]]" -> "Sym(15)"
"Sym(16)" [
label="Sym(16) \n NArray(Sym(14),Sym(15))"
shape=box
color=blue
]
"Sym(14)" -> "Sym(16)"
"Sym(15)" -> "Sym(16)"
"Sym(17)" [
label="Sym(17) \n SumLiftedPA(Sym(16),[Monoid: '+' | 0.0])"
shape=box
color=blue
]
"Sym(16)" -> "Sym(17)"
"Sym(18)" [
label="Sym(18) \n Lambda(var_Sym(2): PArray[Float],Sym(17))"
shape=box
color=red
]
"var_Sym(2): PArray[Float]" -> "Sym(18)"
"Sym(17)" -> "Sym(18)"
"Sym(19)" [
label="Sym(19) \n Lambda(var_Sym(1): PArray[PArray[Tuple2[Int, Float]]],Sym(18))"
shape=box
color=red
]
"var_Sym(1): PArray[PArray[Tuple2[Int, Float]]]" -> "Sym(19)"
"Sym(18)" -> "Sym(19)"
}
